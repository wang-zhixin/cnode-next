import Head from 'next/head'
import { Inter } from '@next/font/google'
import Link from 'next/link'
import Image from 'next/image'
import Logo from '../../public/cnodejs_light.svg'
import { useEffect, useState } from 'react'
import useSWR, { SWRConfig } from 'swr'
import { useRouter } from 'next/router'
import { fetcher } from '@/utils/fetcher'
import dayjs from 'dayjs'

const API = (page: number, tab: Tab) => `https://cnodejs.org/api/v1/topics?page=${page}&limit=${30}&tab=${tab}`

const tags = []

const tabs = [
	{
		name: '全部',
		key: ''
	},
	{
		name: '精华',
		key: 'good'
	},
	{
		name: '分享',
		key: 'share'
	},
	{
		name: '问答',
		key: 'ask'
	},
	{
		name: '招聘',
		key: 'job'
	},
	{
		name: '客户端测试',
		key: 'dev'
	}
]

export async function getServerSideProps(context: any) {
	const { page = 1, tab = '' } = context.query
	const api = API(page, tab)
	const topicsData = await fetcher(api)
	return {
		props: {
			fallback: {
				[api]: topicsData.data
			}
		}
	}
}

type Tab = '' | 'ask' | 'share' | 'job' | 'good'

type TopIcsItem = {
	id: string
	title: string
	tab: string
	reply_count: number
	visit_count: number
	top: boolean
	last_reply_at: string
	author: {
		avatar_url: string
		loginname: string
	}
}

function Topics() {
	const router = useRouter()
	const { page = 1, tab = '' } = router.query
	const api = API(page as number, tab as Tab)
	const { data } = useSWR<TopIcsItem[]>(api)

	return (
		<>
			<div className="w-9/12">
				<div className="flex items-center bg-neutral-100">
					{tabs.map((tab, index) => (
						<Link href={`${tab.key ? `?tab=${tab.key}` : '/'}`}
						      key={index}
						      className={`text-sm p-1 mx-3 my-2 text-lime-500 hover:text-gray-500 rounded ${router.query?.tab === tab.key || (!router.query?.tab && tab.name === '全部') ? 'bg-lime-500 text-gray-50' : ''}`}>
							{tab.name}
						</Link>
					))}
				</div>
				<ul className="bg-white">
					{
						data?.map(({ id, title, tab, reply_count, visit_count, author, last_reply_at }) => (
							<li className="flex items-center p-4 justify-between hover:bg-neutral-100" key={id}>
								<div className="flex items-center">
									<Image src={author.avatar_url[0] === '/' ? `https:${author.avatar_url}` : author.avatar_url}
									       alt={author.loginname} width="30" height="30"/>
									<div className="flex w-16 justify-center items-center ml-4 text align-bottom	">
										<span className="text-indigo-400 text-base">{reply_count}</span>
										<span className="text-neutral-400 text-xs m-0.5">/</span>
										<span className="text-neutral-400 text-xs">{visit_count}</span>
									</div>
									<div className="ml-4 p-1 bg-lime-500 rounded text-gray-50 text-xs">
										置顶
									</div>
									<div className="ml-4 text-black text-base">
										<Link href={{
											pathname: '/topic/[id]',
											query: { id }
										}} className="hover:underline">{title}</Link>
									</div>
								</div>
								<div className="flex items-center">
									<Image src={author.avatar_url[0] === '/' ? `https:${author.avatar_url}` : author.avatar_url}
									       alt="The avatar of the last responder" width="18" height="18"/>
									<div className="flex items-center text-neutral-400 text-sm">
										{/*{dayjs(last_reply_at).fromNow()}*/}
									</div>
								</div>
							</li>
						))
					}
				</ul>
			</div>
		</>
	)
}

function Sidebar() {
	return (
		<>
			<div className="w-3/12 ml-[15px] shrink bg-white">
				右侧区域
			</div>
		</>
	)
}

export default function Home({ fallback }: { fallback: any }) {
	return (
		<SWRConfig value={{ fallback }}>
			<>
				<Head>
					<title>Create Next App</title>
					<meta name="description" content="Generated by create next app"/>
					<meta name="viewport" content="width=device-width, initial-scale=1"/>
					<link rel="icon" href="/favicon.ico"/>
				</Head>
				<main className="container w-full mx-auto flex pt-4">
					<Topics/>
					<Sidebar/>
				</main>
			</>
		</SWRConfig>
	)
}

